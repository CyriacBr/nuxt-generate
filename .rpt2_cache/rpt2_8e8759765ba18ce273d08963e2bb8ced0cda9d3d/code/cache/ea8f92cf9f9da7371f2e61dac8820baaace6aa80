{"code":"import { isTypeORM, capitalize, dasherize } from '../helper';\r\nimport { join } from 'path';\r\nimport { writeFile } from 'fs';\r\nvar EntityHandler = /** @class */ (function () {\r\n    function EntityHandler() {\r\n    }\r\n    EntityHandler.run = function (basePath, moduleName, cli) {\r\n        var _this = this;\r\n        var fileName = dasherize(moduleName) + \".entity.ts\";\r\n        var path = join(basePath, dasherize(moduleName), fileName);\r\n        return new Promise(function (resolve, reject) {\r\n            writeFile(path, _this.makeContent(moduleName, cli), function (err) {\r\n                if (err)\r\n                    return reject(err);\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    EntityHandler.renderImports = function (cli) {\r\n        if (isTypeORM(cli)) {\r\n            return \"\\\"import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\\\"\";\r\n        }\r\n        return '';\r\n    };\r\n    EntityHandler.makeContent = function (moduleName, cli) {\r\n        return \"\\n        \" + this.renderImports(cli) + \"\\n        \\n        \" + (isTypeORM(cli) ? '@Entity()' : '') + \"\\n        export class \" + capitalize(moduleName) + \" {\\n            \" + (isTypeORM(cli) ? '@PrimaryGeneratedColumn()' : '') + \"\\n            id: number;\\n            \\n            \" + (isTypeORM(cli) ? '@Column()' : '') + \"\\n            foo: string;\\n        }\";\r\n    };\r\n    return EntityHandler;\r\n}());\r\nexport { EntityHandler };\r\n","dts":{"name":"/media/cyriac/0CC5166B0CC5166B/Work/nest-g-crud/src/generator/entity-handler.d.ts","writeByteOrderMark":false,"text":"import { Command } from 'commander';\r\nexport declare class EntityHandler {\r\n    static run(basePath: string, moduleName: string, cli: Command): Promise<{}>;\r\n    static renderImports(cli: Command): \"\" | \"\\\"import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\\\"\";\r\n    static makeContent(moduleName: string, cli: Command): string;\r\n}\r\n"}}
