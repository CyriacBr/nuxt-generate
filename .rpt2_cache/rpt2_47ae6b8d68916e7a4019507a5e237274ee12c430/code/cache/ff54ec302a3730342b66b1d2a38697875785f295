{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as pkg from '../package.json';\r\nimport * as cli from 'commander';\r\nimport { NestGenerator } from './generator/nest';\r\nimport { EntityHandler } from './generator/entityHandler';\r\nimport { ServiceHandler } from './generator/serviceHandler';\r\nimport { ControllerHandler } from './generator/controllerHandler';\r\nimport { ModuleHandler } from './generator/moduleHandler';\r\nvar ora = require('ora');\r\nvar basePath = process.cwd();\r\ncli\r\n    .version(pkg.version)\r\n    .option('-d, --dto', 'Use and generate DTOs')\r\n    .option('-o, --orm <orm>', 'Specify the ORM. Currently only supports typeorm')\r\n    .option('-e, --entity', 'Prompt for entity fields')\r\n    .arguments('<name>')\r\n    .action(function (name) {\r\n    run(name);\r\n})\r\n    .parse(process.argv);\r\nfunction run(name) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var error_1;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 6, , 7]);\r\n                    return [4 /*yield*/, runStep('Running nest cli', function () { return NestGenerator.run(basePath, name); })];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, runStep('Generating entity file', function () { return EntityHandler.run(basePath, name, cli, 'entity'); })];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, runStep('Generating service file', function () {\r\n                            return ServiceHandler.run(basePath, name, cli, 'service');\r\n                        })];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, runStep('Generating controller file', function () {\r\n                            return ControllerHandler.run(basePath, name, cli, 'controller');\r\n                        })];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, runStep('Generating module file', function () { return ModuleHandler.run(basePath, name, cli, 'module'); })];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 6:\r\n                    error_1 = _a.sent();\r\n                    console.log(error_1);\r\n                    console.log('Something went wrong. Exiting...');\r\n                    return [3 /*break*/, 7];\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction runStep(title, func) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var spinner;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    spinner = ora(title).start();\r\n                    return [4 /*yield*/, func().catch(function (v) {\r\n                            spinner.fail();\r\n                            return Promise.reject(v);\r\n                        })];\r\n                case 1:\r\n                    _a.sent();\r\n                    spinner.succeed();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n","dts":{"name":"/media/cyriac/0CC5166B0CC5166B/Work/nest-g-crud/src/script.d.ts","writeByteOrderMark":false,"text":"export {};\r\n"}}
