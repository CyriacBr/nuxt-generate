{"code":"var prettier = require('prettier');\r\nexport var ORMOption;\r\n(function (ORMOption) {\r\n    ORMOption[ORMOption[\"None\"] = 0] = \"None\";\r\n    ORMOption[ORMOption[\"TypeORM\"] = 1] = \"TypeORM\";\r\n})(ORMOption || (ORMOption = {}));\r\nexport function noORMSelected(cli) {\r\n    return !cli.orm;\r\n}\r\nexport function isTypeORM(cli) {\r\n    return cli.orm.replace(/\\s/g, '').toLowerCase() === 'typeorm';\r\n}\r\nexport function dasherize(str) {\r\n    return str.replace(/[A-Z]/g, function (char, index) {\r\n        return (index !== 0 ? '-' : '') + char.toLowerCase();\r\n    });\r\n}\r\nexport function capitalize(str) {\r\n    return str[0].toUpperCase() + str.substr(1, str.length - 1);\r\n}\r\nexport function prettyPrint(str) {\r\n    return prettier.format(str, { parser: 'typescript' });\r\n}\r\n","dts":{"name":"/media/cyriac/0CC5166B0CC5166B/Work/nest-g-crud/src/helper.d.ts","writeByteOrderMark":false,"text":"import { Command } from 'commander';\r\nexport declare enum ORMOption {\r\n    None = 0,\r\n    TypeORM = 1\r\n}\r\nexport declare function noORMSelected(cli: Command): boolean;\r\nexport declare function isTypeORM(cli: Command): boolean;\r\nexport declare function dasherize(str: string): string;\r\nexport declare function capitalize(str: string): string;\r\nexport declare function prettyPrint(str: string): any;\r\n"}}
